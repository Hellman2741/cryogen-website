script.
  var reports_filter = 'all';
  var reports_page = 1;
  var reports_filters = {};
  var archived = false;
  var n = null;
  var last_id;
  var last_type;
  $(document).ready(function() {

    loadList();

    function loadList() {
      $.post('/account/reports', { action:'load-list', archive:archived, type:reports_filter, page:reports_page, filters:JSON.stringify(reports_filters) }, function(ret) {
        var data = getJSON(ret);
        if(data == null) return;
        $('#reports-main').html(data.html);
        updatePage(data.pageTotal, reports_page, 'reports');
      });
    }

    function loadListWPage(archive, page) {
      reports_page = page;
      archived = archive;
      loadList();
    }

    function switchFilter() {
      switch(reports_filter) {
        case "all":
          reports_filter = "bugs";
          break;
        case "bugs":
          reports_filter = "player";
          break;
        case "player":
          reports_filter = "all";
          break;
      }
      reports_page = 1;
      removeFilters('reports')
      loadList();

      var title = reports_filter;
      var n_title = "";
      for(var i = 0; i < title.length; i++) {
        if(i == 0) n_title += title.charAt(i).toUpperCase();
        else n_title += title.charAt(i);
      }
      $('#reports-filter').find('span').html(' '+n_title);
    }

    function switchArchive() {
      archived = !archived;
      reports_page = 1;
      removeFilters('reports')
      $('#archive-reports').html(' View '+(archived ? 'Active' : 'Archive'))
      loadList();
    }

    function newReport() {
      var t = this;
      n = noty({
        text: 'What type of report would you like to submit?',
        type: 'confirm',
        layout: 'center',
        dismissQueue: false,
        theme: 'cryogen',
        buttons: [{
          addClass: 'btn btn-primary', text: 'Bug', onClick: function($noty) {
            $noty.close();
            $.post('/account/reports', { action:'load-noty', name:'create_bug_report' }, function(ret) {
              var data = getJSON(ret);
              if(data == null) return null;
              n = noty({
                text: 'Create bug report',
                type: 'confirm',
                layout: 'center',
                template: data.html,
                dismissQueue: false,
                theme: 'cryogen',
                buttons: [{
                  addClass: 'btn btn-primary', text: 'Submit', onClick: function($noty) {
                    $noty.close();
                    var title = $('#title').val();
                    var replicate = $('#replicate').val();
                    var seen = $('#seen').val();
                    var info = $('#info').val();
                    if(isEmpty(title, replicate, seen)) {
                      sendAlert('Please fill out all required fields.');
                      return null;
                    }
                    $.post('/account/reports', { action:'create-bug-report', title:title, replicate:replicate, seen:seen, info:info }, function(ret) {
                      var data = getJSON(ret);
                      if(data == null) return null;
                      sendAlert('Report submitted successfully.')
                      loadList();
                    })
                  }
                },
                {
                  addClass: 'btn btn-danger', text: 'Cancel',  onClick: function($noty) {
                    $noty.close();
                  }
                }]
              })
            });
          }
        },
        {
          addClass: 'btn btn-primary', text: 'Player', onClick: function($noty) {
            $noty.close();
            $.post('/account/reports', { action:'load-noty', name:'create_player_report' }, function(ret) {
              var data = getJSON(ret);
              if(data == null) return null;
              n = noty({
                text: 'Create player report',
                type: 'confirm',
                layout: 'center',
                template: data.html,
                dismissQueue: false,
                theme: 'cryogen',
                buttons: [{
                  addClass: 'btn btn-primary', text: 'Submit', onClick: function($noty) {
                    $noty.close();
                    var title = $('#title').val();
                    var offender = $('#offender').val();
                    var rule = $('#rule').val();
                    var proof = $('#proof').val();
                    var info = $('#info').val();
                    if(isEmpty(title, offender, rule, proof)) {
                      sendAlert('Please fill out all required fields.');
                      return null;
                    }
                    $.post('/account/reports', { action: 'create-player-report', title:title, offender:offender, rule:rule, proof:proof, info:info }, function(ret) {
                      var data = getJSON(ret);
                      if(data == null) return null;
                      sendAlert('Report submitted successfully.')
                      loadList();
                    });
                  }
                },
                {
                  addClass: 'btn btn-danger', text: 'Cancel',  onClick: function($noty) {
                    $noty.close();
                  }
                }]
              })
            });
          }
        },
        {
          addClass: 'btn btn-danger', text: 'Cancel', onClick: function($noty) {
            $noty.close();
          }
        }]
      })
      return false;
    }

    function viewReport(type, id) {
      $.post('/account/reports', { action:'view-report', id:id, type:type }, function(ret) {
        var data = getJSON(ret);
        if(data == null) return false;
        var but = [];
        if(data.active)
          but.push({
            addClass: 'btn btn-primary', text: 'Archive', onClick: function($noty) {
              $noty.close()
              archiveReport()
            }
          })
        but.push({
          addClass: 'btn btn-danger', text: 'Cancel', onClick: function($noty) {
            $noty.close();
          }
        })
        n = noty({
          text: 'View report',
          type: 'confirm',
          layout: 'center',
          template: data.html,
          dismissQueue: true,
          theme: 'cryogen',
          buttons: but
        })
      })
    }

    function clickReport() {
      var type = $(this).closest('tr').data('type')
      var id = $(this).closest('tr').data('id')
      last_type = type
      last_id = id
      viewReport(type, id)
    }

    function archiveReport() {
      noty({
        text: 'Are you sure you wish to archive this report?',
        type: 'confirm',
        layout: 'center',
        dismissQueue: true,
        theme: 'cryogen',
        buttons: [{
          addClass: 'btn btn-primary btn-green', text: 'Confirm', onClick: function($noty) {
            $noty.close();
            n = null;
            $.post('/account/reports', { action: 'archive-report', id:last_id, type:last_type}, (ret) => {
              var data = getJSON(ret)
              if(data == null) return false;
              sendAlert('Report has been successfully archived!')
              loadList()
            })
          }
        },
        {
          addClass: 'btn btn-danger', text: 'Cancel', onClick: function($noty) {
            $noty.close();
            viewReport(last_type, last_id)
          }
        }]
      })
    }

    function submitComment() {
      elm = $(this).closest('#view-report')
      com = elm.find('textarea')
      val = com.val()
      if(val == '' || val == ' ' || val.length < 5) {
        sendAlert('Your comment must have at least 5 valid characters.')
        return false
      }
      id = elm.data('id')
      type = elm.data('type')
      $.post('/account/reports', { action: 'comment', id:id, type:type, comment:val}, (ret) => {
        var data = getJSON(ret)
        if(data == null) return false
        $('#comments').html(data.html)
      })
      com.val('')
      loadList()
    }

    function changePage() {
      var page = $(this).data('page')
      if(page == reports_page)
        return false;
      reports_page = page;
      loadList();
    }

    $('#reports-filter').click(switchFilter);
    $('#reports-archive-btn').click(switchArchive);
    $('#create-report').click(newReport);
    $('#search-reports-icon').click(clickedSearchIcon);

    $(document).on('click', '#reports-pages span', changePage);
    $(document).on('click', '.view-report', clickReport);
    $(document).on('click', '#com-btn', submitComment);
    $(document).on('click', '.remove-filter', clickedFilter);

    //search function
    $('#search-reports-icon').attr('title', OPEN);

    function clickedSearchIcon() {
      type = reports_filter == 'all' ? '2' : reports_filter == 'bugs' ? '0' : '1'
      clickSearchIcon('reports', archived, reports_page, loadListWPage, { 'type': type })
    }

    function clickedFilter() {
      type = reports_filter == 'all' ? '2' : reports_filter == 'bugs' ? '0' : '1'
      clickRemoveFilter('reports', $(this), archived, loadListWPage, { 'type': type })
    }

    $(document).click(function(e) {
      var target = e.target;
      if(n == null)
        return;
      var id = n.options.id;
      if($(e.target).closest('#'+id).length) {

      } else {
        n.close();
        n = null;
      }
    });

  });

h5 Reports
p.small.info The following are your reports for bugs and players.
p.small.info You may start a new report by clicking the 'new' button on the right.
p.small.info Select the report to view more details on it.
div.row 
  div.iactions
    div
      div(style='float: left; margin: 10px 10px;')
        div.col-xs-4
          p.color-grey.search-info Click the search icon to begin searching through reports. Search using filters with filter:value and separate with commas. True/false or yes/no can be used.
        div.col-xs-4
          p.color-grey.search-info Filters: type: (0 - bug, 1 - player, PAGE FILTER MUST BE SET TO ALL), title: (title), date: start-end (dd/mm/yyyy), last_action: (last_action)
        div.col-xs-4
          p.color-grey.search-info Example: title: test, last_action: archived
      div(style='float: right; margin: 33.5px 5px;')
        div.link#create-report
          i.fa.fa-plus-square
          span  New
        div.link#reports-filter
          i.fa.fa-filter
          span  All
        div.link#reports-archive-btn
          i.fa.fa-archive
          span#archive-reports  View Archive
div.row(style='padding: 15px;')
  div#search-reports(style='clear: both; float: right; margin-bottom: 15px; text-align: left;')
    div
      span.fa.fa-search.link#search-reports-icon(style='display: inline; float: right; padding-left: 5px; margin-top: 7px;')
      div#search-reports-pin(style='float: right; display: none;', display='none')
        input.form-control(type='text', placeholder='Search', style='max-width: 150px; max-height: 30px; background: #111; border: #000; display: inline!important;')
  div.search-filters-reports(style='clear: both; float: right;')
  div.col-md-12(style='border: 1px solid #000; clear: both; margin-bottom: 10px;')
  div#reports-main
  div.pages
    div#reports-pages
