script.
  var n = null;
  var shop_page = 1;
  var shop_filter = 'All'
  var items = []
  var reviewNoty = null
  $(document).ready(function() {

    loadList();

    function loadList() {
      $.post('/account/shop', { action: 'load-list', page:shop_page, filter:shop_filter }, (ret) => {
        var data = getJSON(ret);
        if(data == null) return false;
        $('#shop-main').html(data.html)
        items = JSON.parse(data.items)
        updateTotal(data.totalItems, data.totalPrice)
        updatePage(data.pageTotal, shop_page, 'shop')
        decodeCartData();
      })
    }

    function loadListWPage(archive, page) {
      this.shop_page = page;
      loadList();
    }

    //sets quantity in array to new value
    function setQuantity(element, quantity) {
      var id = element.data('id')
      var quant = items[id] || 0
      quant = (parseInt(quant) + quantity).toString()
      if(quant < 0)
        quant = 0;
      items[id] = quant
      setCartData();
    }

    function updateTotal(total_items, total_price) {
      $('#cart-price').html(` Cart (${total_items}) - $${total_price}`)
    }

    //sends new cart data to server, which then saves it, also loops through those items
    //and changes the quantity on the page as well as total_items and total_price
    function setCartData() {
      var total_price = 0
      var total_items = 0
      $.post('/account/shop', { action: 'set-cart', cart:JSON.stringify(items) }, (ret) => {
        var data = getJSON(ret)
        if(data == null) return null
        total_price = data.totalPrice
        total_items = data.totalItems
        updateTotal(total_items, total_price)
        decodeCartData();
      })
    }

    function decodeCartData() {
      for(item in items) {
        var quant = items[item]
        var element = $('.items').find(`[data-id=${item}]`)
        if(quant <= 0) {
          element.find('.item-quantity').attr('hidden', 'true')
        } else {
          element.find('.item-quantity').removeAttr('hidden')
        }
        element.find('.add-to-cart').css('display', quant <= 0 ? '' : 'none')
        if(quant > 0)
          element.find('.input-number').val(quant)
        if(reviewNoty != null) {
          var info = $(`.cart-item[data-id=${item}] .item-info`)
          var value = info.html()
          value = value.substring(value.indexOf('x'))
          value = quant+' '+value
          info.html(value)
        }
      }
    }

    function switchFilter() {
      switch(shop_filter) {
        case 'All':
          shop_filter = 'Membership';
          break;
        case 'Membership':
          shop_filter = 'Animations';
          break;
        case 'Animations':
          shop_filter = 'All';
          break;
      }
      $('#shop-filter span').html(' '+shop_filter);
      removeFilters('shop')
      loadList();
    }

    function viewReview() {
      $.post('/account/shop', { action: 'load-review' }, (ret) => {
        var data = getJSON(ret)
        if(data == null) return null
        reviewNoty = noty({
          text: 'Review Cart',
          type: 'confirm',
          layout: 'center',
          template: data.html,
          dismissQueue: false,
          theme: 'cryogen',
          buttons: [{
            addClass: 'btn btn-primary', text: 'Continue', onClick: function($noty) {
              $noty.close();
              reviewNoty = null;
            }
          }]
        })
      });
    }

    function confirmCheckout() {
      n = noty({
        text: 'Confirm to be redirected to PayPal.',
        type: 'confirm',
        layout: 'center',
        dismissQueue: true,
        theme: 'cryogen',
        buttons: [{
          addClass: 'btn btn-primary btn-green', text: 'Confirm', onClick: function($noty) {
            $noty.close();
            n = null;
            $.post('/account/shop', { action:'checkout' }, (ret) => {
              var data = getJSON(ret)
              if(data == null) return null;
              window.location.href = data.link
            })
          }
        },
        {
          addClass: 'btn btn-danger', text: 'Cancel', onClick: function($noty) {
            $noty.close();
          }
        }]
      })
    }

    function increaseQuantity() {
      setQuantity($(this).closest('.item'), 1);
    }

    function decreaseQuantity() {
      setQuantity($(this).closest('.item'), -1);
    }

    function increaseReview() {
      setQuantity($(this).closest('.cart-item'), 1);
    }

    function decreaseReview() {
      setQuantity($(this).closest('.cart-item'), -1);
    }

    function changePage() {
      var page = $(this).data('page')
      if(page == shop_page)
        return false;
      shop_page = page;
      loadList();
    }

    function clickedSearchIcon() {
      clickSearchIcon('shop', false, shop_page, loadListWPage, { 'type': shop_filter })
    }

    function clickedFilter() {
      clickRemoveFilter('shop', $(this), false, loadListWPage, { 'type': shop_filter })
    }

    //btn is pressed to increase/decrease
    $('.btn-success').click(increaseQuantity)
    $('.btn-danger').click(decreaseQuantity)
    $('#shop-filter').click(switchFilter);
    $('#cart-price').click(viewReview);
    $('#shop-checkout').click(confirmCheckout);
    $(document).on('click', '.item-info .fa-plus', increaseReview);
    $(document).on('click', '.item-info .fa-minus', decreaseReview);
    $(document).on('click', '.btn-ok', increaseQuantity);
    $(document).on('click', '.btn-success', increaseQuantity);
    $(document).on('click', '.btn-danger', decreaseQuantity);
    $(document).on('click', '#shop-pages span', changePage);

    $('#search-shop-icon').attr('title', OPEN);
    $('#search-shop-icon').click(clickedSearchIcon);
    $(document).on('click', '.remove-filter', clickedFilter);

    $(document).keydown((e) => {
      if(e.which == 13)
        clickedSearchIcon();
    })

  })
h5 Cryogen Shop
p.small.info The following is your Cryogen Shop!
p.small.info Search through the items using the search bar, or filter them with the buttons on the right. Further instructions on searching below.
p.small.info Currently accepted methods: Paypal \(More to come)
div.row 
  div.iactions
    div
      div(style='float: left; margin: 10px 10px;')
        div.col-xs-4
          p.color-grey.search-info Click the search icon to begin searching through items. Search using filters with filter:value and separate with commas. True/false or yes/no can be used.
        div.col-xs-4
          p.color-grey.search-info
            |Filters: name: (name) <br />
            |(More to be added)
        div.col-xs-4
          p.color-grey.search-info Example: name:contributor
      div(style='float: right; margin: 33.5px 5px;')
        div.link#shop-filter
          i.fa.fa-filter
          span  All
        div.link#shop-cart(title='Click to view cart')
          i.fa.fa-shopping-cart
          span#cart-price= ' Cart (0) - $0'
        div.link#shop-checkout
          i.fa.fa-credit-card
          span  Checkout
div.row(style='padding: 15px;')
  div#search-shop(style='clear: both; float: right; margin-bottom: 15px; text-align: left;')
    div
      span.fa.fa-search.link#search-shop-icon(style='display: inline; float: right; padding-left: 5px; margin-top: 7px;')
      div#search-shop-pin(style='float: right; display: none;', display='none')
        input.form-control(type='text', placeholder='Search', style='max-width: 150px; max-height: 30px; background: #111; border: #000; display: inline!important;')
  div.search-filters-shop(style='clear: both; float: right;')
  div.col-md-12(style='border: 1px solid #000; clear: both; margin-bottom: 10px;')
  div#shop-main
  div.pages
    div#shop-pages
